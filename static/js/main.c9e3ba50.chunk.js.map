{"version":3,"sources":["images/images.png","component/todo.js","App.js","index.js"],"names":["Todo","useState","inputData","setInputData","localStorage","getItem","JSON","parse","items","setItems","toggleSubmit","setToggleSubmit","isEditItem","setisEditItem","addItem","map","ele","id","name","allInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","todo","alt","type","placeholder","value","onChange","e","target","title","onClick","newEditItem","find","console","log","editItem","index","updateditems","filter","deleteItem","App","ReactDOM","render","document","getElementById"],"mappings":"iLAAe,MAA0B,mC,OCuH1BA,EAxGH,WAER,MAAgCC,mBAAS,IAAzC,mBAAMC,EAAN,KAAiBC,EAAjB,KACA,EAAsBF,mBAXbG,aAAaC,QAAQ,SAElBC,KAAKC,MAAMH,aAAaC,QAAQ,UAEhC,IAOZ,mBAAMG,EAAN,KAAYC,EAAZ,KACA,EAAoCR,oBAAS,GAA7C,mBAAMS,EAAN,KAAmBC,EAAnB,KACA,EAAgCV,mBAAS,MAAzC,mBAAMW,EAAN,KAAiBC,EAAjB,KAEMC,EAAQ,WAEV,GAAIZ,EAEE,GAAIA,IAAcQ,EACpBD,EAASD,EAAMO,KAAI,SAACC,GACb,OAAGA,EAAIC,KAAOL,EACH,2BAAII,GAAX,IAAeE,KAAKhB,IAEjBc,MAEdL,GAAgB,GAChBR,EAAa,IACbU,EAAc,UAGd,CACC,IAAMM,EAAa,CAACF,IAAG,IAAIG,MAAOC,UAAUC,WAAWJ,KAAKhB,GAC7DO,EAAS,GAAD,mBAAKD,GAAL,CAAWW,KACnBhB,EAAa,SAhBboB,MAAM,2BAiDd,OALHC,qBAAU,WACHpB,aAAaqB,QAAQ,QAAQnB,KAAKoB,UAAUlB,MAChD,CAACA,IAII,mCACA,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAKC,EAAMC,IAAI,cACnB,6EAEL,sBAAKH,UAAU,WAAf,UACI,uBAAOI,KAAK,OAAQC,YAAY,4BAAkBf,GAAG,GACrDgB,MAAO/B,EAAWgC,SAAU,SAACC,GAAD,OAAKhC,EAAagC,EAAEC,OAAOH,UAGnDvB,EAAa,mBAAGiB,UAAU,sBAAsBU,MAAM,WAAYC,QAASxB,IAC3E,mBAAGa,UAAU,sBAAsBU,MAAM,YAAYC,QAASxB,OAItE,qBAAKa,UAAU,YAAf,SAEQnB,EAAMO,KAAI,SAACC,GACP,OACG,sBAAKW,UAAU,WAAf,UACG,6BAAKX,EAAIE,OACT,sBAAKS,UAAU,WAAf,UACI,mBAAGA,UAAU,qBAAqBU,MAAM,YACxCC,QAAS,kBA/ChC,SAACrB,GACjB,IAAIsB,EAAY/B,EAAMgC,MAAK,SAACxB,GACpB,OAAOA,EAAIC,KAAKA,KAExBwB,QAAQC,IAAIH,GACV5B,GAAgB,GAChBR,EAAaoC,EAAYrB,MACzBL,EAAcI,GAwCoC0B,CAAS3B,EAAIC,OAC1B,mBAAGU,UAAU,2BAA2BU,MAAM,cAC9CC,QAAS,kBAzD9B,SAACM,GACf,IAAMC,EAAarC,EAAMsC,QAAO,SAAC9B,GACzB,OAAO4B,IAAS5B,EAAIC,MAE5BR,EAASoC,GAqDuCE,CAAW/B,EAAIC,YANJD,EAAIC,SAclD,qBAAKU,UAAU,YAAf,SACE,wBAAQA,UAAU,eAAe,oBAAkB,aACnDW,QA/CH,WACf7B,EAAS,KA6CS,SACqB,0DCtGzBuC,EAPL,WACR,OACE,mCACD,cAAC,EAAD,OCDHC,IAASC,OACN,mCACE,cAAC,EAAD,MAEHC,SAASC,eAAe,W","file":"static/js/main.c9e3ba50.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/images.c5a91050.png\";","import React,{useState,useEffect} from 'react';\r\nimport todo from \"../images/images.png\";\r\n\r\n\r\n // to get the data from list\r\n const getLocalItems=()=>{\r\n     \r\n    let list=localStorage.getItem(\"lists\");\r\n     if(list){                                              //if list is not empty\r\n         return JSON.parse(localStorage.getItem(\"lists\")); //convert string into object/array\r\n     } else{\r\n         return [];\r\n     }\r\n   }\r\n\r\n const Todo=()=>{\r\n \r\n    const[inputData, setInputData]= useState(\"\");\r\n    const[items,setItems]=useState(getLocalItems());     //bcoz it expects an array\r\n    const[toggleSubmit,setToggleSubmit]=useState(true);\r\n    const[isEditItem,setisEditItem]=useState(null);               //after editing changing icon\r\n   \r\n    const addItem=()=>{\r\n \r\n        if(!inputData){\r\n            alert(\"Please write something\");\r\n        }else if( inputData && !toggleSubmit){                 //if editing the data\r\n            setItems(items.map((ele)=>{                         //to check the which id is editable\r\n                   if(ele.id === isEditItem){\r\n                       return {...ele,name:inputData}\r\n                   }\r\n                   return ele;\r\n            }))\r\n            setToggleSubmit(true);\r\n            setInputData(\"\");\r\n            setisEditItem(null);\r\n          \r\n        }\r\n        else{  //Creating a new key dynamically using getting time\r\n             const allInputData={id:new Date().getTime().toString(),name:inputData} //key-Value pair\r\n            setItems([...items,allInputData]);\r\n            setInputData(\"\");\r\n        }\r\n   }\r\n//delete item \r\nconst  deleteItem=(index)=>{\r\n    const updateditems=items.filter((ele)=>{\r\n            return index!== ele.id;\r\n    });\r\n    setItems(updateditems);\r\n}\r\n\r\n\r\nconst  editItem=(id)=>{\r\nlet newEditItem=items.find((ele)=>{                 //which id is selected to edit\r\n        return ele.id===id;\r\n});\r\nconsole.log(newEditItem);\r\n  setToggleSubmit(false);\r\n  setInputData(newEditItem.name);\r\n  setisEditItem(id);\r\n\r\n}\r\n\r\n//remove All\r\nconst removeAll=()=>{\r\n setItems([]);\r\n}\r\n //Add data to local storage                                     // setitem and getitem are predefined functions\r\n useEffect(() => {\r\n        localStorage.setItem('lists',JSON.stringify(items));      //key value pair , we can give any key name\r\n }, [items]) ;                                                    //whenever the value of items changes\r\n\r\n\r\n    return(\r\n         <>\r\n         <div className=\"main-div\">\r\n             <div className=\"child-div\">\r\n                 <figure>\r\n                     <img src={todo} alt=\" todologo\"></img>\r\n                      <figcaption> Add Your List Here 🤞</figcaption>\r\n                 </figure>\r\n                 <div className=\"addItems\">\r\n                     <input type=\"text\"  placeholder=\"✍️ Add Items...\" id=\"\" \r\n                     value={inputData} onChange={(e)=>setInputData(e.target.value)}\r\n                     />\r\n                     {\r\n                         toggleSubmit?<i className=\"fas fa-plus add-btn\" title=\"Add Item\"  onClick={addItem}></i>:\r\n                         <i className=\"fas fa-edit add-btn\" title=\"Edit Item\" onClick={addItem}></i>\r\n                     }\r\n                 \r\n                         </div>\r\n                 <div className=\"showItems\">\r\n                     {\r\n                         items.map((ele)=>{\r\n                             return(\r\n                                <div className=\"eachItem\" key={ele.id}>\r\n                                   <h3>{ele.name}</h3>\r\n                                   <div className=\"todo-btn\">\r\n                                       <i className=\"fa fa-edit add-btn\" title=\"Edit Item\" \r\n                                       onClick={()=>editItem(ele.id)}></i>\r\n                                       <i className=\"far fa-trash-alt add-btn\" title=\"Delete Item\" \r\n                                       onClick={()=>deleteItem(ele.id)}></i>\r\n                                  </div>\r\n                                </div>\r\n                             );\r\n                         })\r\n                     }\r\n                      \r\n                 </div>\r\n                 <div className=\"showItems\">\r\n                   <button className=\"btn effect04\" data-sm-linl-text=\"Remove All\"\r\n                   onClick={removeAll} ><span>REMOVE ALL</span></button>\r\n                 </div>\r\n             </div>\r\n         </div>\r\n         </>\r\n     );\r\n }\r\nexport default Todo;\r\n\r\n\r\n","import React from 'react';\nimport Todo  from './component/todo';\n\nconst App=()=>{\n  return(\n    <> \n   <Todo/>\n    </>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(\n   <>\n     <App />\n   </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}